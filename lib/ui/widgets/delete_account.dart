import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';
import 'package:go_router/go_router.dart';
import 'package:quiz_maker/data/constants/route_paths.dart';
import 'package:quiz_maker/ui/utilities/messager.dart';

class DeleteAccount extends StatelessWidget {
  const DeleteAccount({Key? key}) : super(key: key);

  confirmDeleteAccount(BuildContext context) {
    showDialog(
        context: context,
        barrierDismissible: false,
        builder: (_) {
          var isDeleting = false;
          return StatefulBuilder(builder: (_, setTheState) {
            return AlertDialog(
              title: const Text('Confirm'),
              content: const Text(
                  'Permanently delete your account and all data generated by your account? This is not reversible.'),
              actions: [
                if (isDeleting) const CircularProgressIndicator(),
                FilledButton(
                    onPressed: isDeleting
                        ? null
                        : () {
                            setTheState(() {
                              isDeleting = true;
                            });
                            FirebaseFirestore.instance
                                .collection('users')
                                .doc(FirebaseAuth.instance.currentUser!.email!)
                                .delete()
                                .then((_) {
                              FirebaseAuth.instance.currentUser
                                  ?.delete()
                                  .then((_) {
                                context.pushReplacementNamed(RoutePaths.auth);
                              }).catchError((error) {
                                setTheState(() {
                                  isDeleting = false;
                                });
                                Navigator.pop(context);
                                if (kDebugMode) {
                                  print(error);
                                }
                                Messager.showSnackBar(
                                    context: context,
                                    message:
                                        'Error deleting user. Log out and sign in again.',
                                    isError: true);
                              });
                            }).catchError((error) {
                              setTheState(() {
                                isDeleting = false;
                              });
                              Navigator.pop(context);
                              Messager.showSnackBar(
                                  context: context,
                                  message: 'Error deleting user data',
                                  isError: true);
                            });
                          },
                    child: const Text('Delete')),
                FilledButton.tonal(
                    onPressed: isDeleting
                        ? null
                        : () {
                            Navigator.pop(context);
                          },
                    child: const Text('Cancel')),
              ],
            );
          });
        });
  }

  @override
  Widget build(BuildContext context) {
    return Card(
      child: ListTile(
        onTap: () => confirmDeleteAccount(context),
        title: const Text(
          'Delete account',
          style: TextStyle(color: Colors.red),
        ),
        subtitle: const Text(
          'Delete your account and all data created by you. Not reversible',
        ),
        trailing: const Icon(
          Icons.delete_forever,
          color: Colors.red,
        ),
      ),
    );
  }
}
